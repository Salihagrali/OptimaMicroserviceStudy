spring.application.name=organization-service

spring.profiles.active=dev
spring.cloud.config.uri=http://localhost:8071
spring.config.import=configserver:

#Config Server Repository: The Config Server is backed by a repository (e.g., Git, file system, etc.) that contains configuration files.
# These files are typically named in the format <application-name>-<profile>.properties or <application-name>-<profile>.yml.

#Application Name: The spring.application.name property specifies the name of the application.
# For example, if spring.application.name=organization-service, the Config Client will look for configuration files named organization-service.properties or organization-service.yml in the repository.

#Active Profile: The spring.profiles.active property specifies the active profile.
# For example, if spring.profiles.active=dev, the Config Client will look for organization-service-dev.properties or organization-service-dev.yml.

#Default Behavior: If the spring.application.name is not set correctly or does not match any configuration file in the Config Server's repository,
# the application will fail to start because it cannot find the required configuration.